{"version":3,"sources":["config/axios.js","utils/Requests.js","components/Banner.js","components/Nav.js","components/Row.js","views/HomeScreen.js","config/firebase.js","views/SignUpScreen.js","images/netflixlogo.png","images/landingdownload.jpg","videos/homevideo.mp4","videos/homevideo2.mp4","components/LandingSection.jsx","views/LoginScreen.js","features/userSlice.js","components/PlanScreen.js","views/ProfileScreen.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","style","backgroundImage","backdrop_path","className","title","name","original_name","overview","substr","Nav","show","handleShow","history","useHistory","transitionNavBar","window","scrollY","addEventListener","removeEventListener","onClick","push","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","poster_path","movieTrailer","tmdbId","id","then","url","urlParams","URLSearchParams","URL","search","catch","err","handleTrailer","videoId","opts","height","width","playerVars","autoplay","HomeScreen","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","SignUpScreen","emailRef","useRef","passwordRef","action","ref","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","user","alert","message","createUserWithEmailAndPassword","authUser","LandingSection","updateSignIn","muted","loop","homevideo","landingdownload","homevideo2","LoginScreen","signIn","setSignIn","netflixlogo","userSlice","createSlice","initialState","reducers","login","state","payload","logout","actions","selectUser","PlanScreen","plans","quality","ProfileScreen","useSelector","emial","signOut","App","dispatch","useDispatch","unsubscribe","onAuthStateChanged","uid","email","exact","path","component","configureStore","reducer","userReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84c82e8d.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL : \"https://api.themoviedb.org/3\"\n})\nexport default instance;","const API_KEY = \"13c41f29c5b2898fe03cf5066bd90fa4\";\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n}\nexport default requests;","import axios from \"../config/axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Banner.css\";\r\nimport requests from \"../utils/Requests\";\r\n\r\nconst Banner = () => {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n  function truncate(string, n) {\r\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\r\n  }\r\n  return (\r\n    <header style={{\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`\r\n    }} className=\"banner\">\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">\r\n          {truncate(\r\n            movie?.overview,\r\n            150\r\n          )}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner--fadeButton\"></div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Nav.css\";\n\nconst Nav = () => {\n    const [show,handleShow] = useState(false)\n    const history = useHistory()\n    const transitionNavBar = () =>{\n        if (window.scrollY > 100) {\n            handleShow(true)\n        }else{\n            handleShow(false)\n        }\n    }\n    useEffect(() => {\n         window.addEventListener(\"scroll\",transitionNavBar)\n         return () => window.removeEventListener(\"scroll\",transitionNavBar)\n    }, [])\n  return (\n    <div className={`nav  ${show && \"nav_black\" }`}>\n      <div className=\"nav_contents\">\n        <img\n        onClick={() =>history.push(\"/\")}\n          className=\"nav_logo\"\n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\n          alt=\"\"\n        /> \n        <img\n        onClick={() => history.push(\"/profile\")}\n          className=\"nav_avatar\"\n          src=\"https://image.flaticon.com/icons/png/512/147/147144.png\"\n          alt=\"\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"../config/axios\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer'\nimport \"./Row.css\";\n\nconst Row = ({ title, fetchUrl, isLargeRow = false }) => {\n  const [movies, setMovies] = useState([]);\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  const [trailerUrl , setTrailerUrl] =useState(\"\")\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    }\n  }\n  const handleTrailer = (movie) =>{\n    if(trailerUrl !== \"\"){\n      setTrailerUrl(\"\")\n    }else{\n      movieTrailer(movie?.name ,{tmdbId: movie?.id})\n      .then((url) =>{\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'))\n      })\n      .catch(err =>{\n        console.log(err);\n      })\n    }\n  }\n  console.log(movies);\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map(\n          (movie) =>\n            ((isLargeRow && movie?.poster_path) ||\n              (!isLargeRow && movie?.backdrop_path)) && (\n              <img\n              onClick={() =>handleTrailer(movie)}\n                key={movie?.id}\n                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                src={`${base_url}${\n                  isLargeRow ? movie?.poster_path : movie?.backdrop_path\n                }`}\n                alt={movie?.name}\n              />\n            )\n        )}\n      </div>\n      {trailerUrl !== \"\" ? <YouTube\n        videoId={trailerUrl} \n        opts={opts}\n      />: null}\n    </div>\n  );\n};\n\nexport default Row;\n","import React from \"react\";\nimport Banner from \"../components/Banner\";\nimport \"./HomeScreen.css\";\nimport Nav from \"../components/Nav\";\nimport requests from \"../utils/Requests\";\nimport Row from \"../components/Row\";\n\nconst HomeScreen = () => {\n  return (\n    <div className=\"homeScreen\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINAL\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row\n        title=\"Trending Now\"\n        fetchUrl={requests.fetchTrending}\n      />\n      <Row\n        title=\"Top Rated\"\n        fetchUrl={requests.fetchTopRated}\n      />\n      <Row\n        title=\"Action Movies\"\n        fetchUrl={requests.fetchActionMovies}\n      />\n      <Row\n        title=\"Comedy Movies\"\n        fetchUrl={requests.fetchComedyMovies}\n      />\n      <Row\n        title=\"Horror Movies\"\n        fetchUrl={requests.fetchHorrorMovies}\n      />\n      <Row\n        title=\"Romance Movies\"\n        fetchUrl={requests.fetchRomanceMovies}\n      />\n      <Row\n        title=\"Documentaries\"\n        fetchUrl={requests.fetchDocumentaries}\n      />\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import firebase from \"firebase\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCce_gYp80pRwsKmdOMGVSP0RKe6osdW3I\",\n  authDomain: \"netflix-clone-1f045.firebaseapp.com\",\n  projectId: \"netflix-clone-1f045\",\n  storageBucket: \"netflix-clone-1f045.appspot.com\",\n  messagingSenderId: \"681986599931\",\n  appId: \"1:681986599931:web:d066db8ffe982fb1e5395e\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport {  auth };\nexport default db;\n","import React, { useRef } from \"react\";\nimport { auth } from \"../config/firebase\";\nimport \"./SignUpScreen.css\";\n\nconst SignUpScreen = () => {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const register = (e) => {\n    e.preventDefault();\n    auth.createUserWithEmailAndPassword(\n      emailRef.current.value,\n      passwordRef.current.value\n    ).then((authUser) =>{\n        console.log(authUser);\n    })\n    .catch((err) =>{\n        alert(err.message)\n    });\n  };\n  const signIn = (e) => {\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(emailRef.current.value,passwordRef.current.value)\n    .then((user) =>{\n        console.log(user);\n    })\n    .catch((err) =>{\n        alert(err.message)\n    })\n  };\n  return (\n    <div className=\"signUpScreen\">\n      <form action=\"\">\n        <h1>Sign In</h1>\n        <input ref={emailRef} type=\"email\" placeholder=\"Email\" />\n        <input ref={passwordRef} placeholder=\"Password\" type=\"password\" />\n        <button type=\"submit\" onClick={signIn}>\n          Sign In\n        </button>\n        <h4>\n          <span className=\"signUpScreen__grey\">New to Netflix ?</span>\n          <span className=\"signUpScreen__link\" onClick={register}>\n            Sign Up Now.\n          </span>\n        </h4>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpScreen;\n","export default __webpack_public_path__ + \"static/media/netflixlogo.774e8c16.png\";","export default __webpack_public_path__ + \"static/media/landingdownload.3f31c58c.jpg\";","export default __webpack_public_path__ + \"static/media/homevideo.2b5105f6.mp4\";","export default __webpack_public_path__ + \"static/media/homevideo2.89c040b2.mp4\";","import React from \"react\";\nimport \"../views/LoginScreen.css\";\nimport landingdownload from \"../images/landingdownload.jpg\";\nimport homevideo from \"../videos/homevideo.mp4\";\nimport homevideo2 from \"../videos/homevideo2.mp4\";\n\nconst LandingSection = ({updateSignIn}) => {\n  return (\n    <div>\n      <div className=\"devider\" />\n      {/* section: first row */}\n      <div className=\"flex-container\">\n        <div className=\"text__box row1__col1\">\n          <h1>Enjoy on your TV.</h1>\n          <p>\n            Watch on smart TVs, PlayStation, Xbox, Chromecast, Apple TV, Blu-ray\n            players and more.\n          </p>\n        </div>\n        <div className=\"row1__col2\">\n          <video\n            className=\"video__box\"\n            width=\"400\"\n            autoplay=\"autoplay\"\n            muted\n            loop\n          >\n            <source src={homevideo} type=\"video/mp4\" />\n            Your browser does not support HTML video.\n          </video>\n        </div>\n      </div>\n      <div className=\"devider\" />\n      {/* section: second row */}\n      <div className=\"flex-container\">\n        <div className=\"text__box row2__col1 \">\n          <img src={landingdownload} className=\"img__box\" alt=\"\" />\n        </div>\n        <div className=\"row2__col2\">\n          <h1>\n            Download your shows\n            <br />\n            to watch offline.\n          </h1>\n          <p>\n            Watch on smart TVs, PlayStation, Xbox, Chromecast, Apple TV, Blu-ray\n            players and more.\n          </p>\n        </div>\n      </div>\n      <div className=\"devider\" />\n      {/* section: third row */}\n      <div className=\"flex-container\">\n        <div className=\"text__box row1__col1\">\n          <h1>Watch everywhere.</h1>\n          <p>\n            Stream unlimited movies and TV shows on your phone, tablet, laptop,\n            and TV.\n          </p>\n        </div>\n        <div className=\"row1__col2\">\n          <video\n            className=\"video__box\"\n            width=\"400\"\n            autoplay=\"autoplay\"\n            muted\n            loop\n          >\n            <source src={homevideo2} type=\"video/mp4\" />\n            Your browser does not support HTML video.\n          </video>\n        </div>\n      </div>\n      <div className=\"devider\" />\n      {/* section: faq */}\n      <div className=\"faq\">\n        <h1>Frequently Asked Questions</h1>\n        <div className=\"faq__box\">\n          <p>What is Netflix?</p>\n          <p>+</p>\n        </div>\n        <div className=\"faq__box\">\n          <p>How much does Netflix cost?</p>\n          <p>+</p>\n        </div>\n        <div className=\"faq__box\">\n          <p>Where can I watch?</p>\n          <p>+</p>\n        </div>\n        <div className=\"faq__box\">\n          <p>How do I cancel?</p>\n          <p>+</p>\n        </div>\n        <div className=\"faq__box\">\n          <p>What can I watch on Netflix?</p>\n          <p>+</p>\n        </div>\n        <h3>\n          Ready to watch? Enter your email to create or restart your membership.\n        </h3>\n        <div className=\"loginScreen__input\">\n          <form action=\"\">\n            <input type=\"email\" placeholder=\"Email Address\" />\n            <button\n                onClick={() => updateSignIn()}\n              className=\"loginScreen__getStarted\"\n            >\n              GET STARTED ▶\n            </button>\n          </form>\n        </div>\n      </div>\n      <div className=\"devider\" />\n      {/* section: footer */}\n      <section className=\"footer\">\n        <p>Questions? Call 000-800-040-1843</p>\n        <section className=\"box__section\">\n          <div className=\"box\">\n            <p>FAQ</p>\n            <p>Investor Relations</p>\n            <p>Privacy</p>\n            <p>Speed Test</p>\n          </div>\n          <div className=\"box\">\n            <p>Help Centre</p>\n            <p>Jobs</p>\n            <p>Cookie Preferences</p>\n            <p>Legal Notices</p>\n          </div>\n          <div className=\"box\">\n            <p>Account</p>\n            <p>Ways to Watch</p>\n            <p>Corporate Information</p>\n            <p>Netflix Originals</p>\n          </div>\n          <div className=\"box\">\n            <p>Media Centre</p>\n            <p>Terms of Use</p>\n            <p>Contact Us</p>\n          </div>\n        </section>\n        <select className=\"language\" name=\"\" id=\"\">\n          <option value=\"English\">English</option>\n          <option value=\"Hindi\">Hindi</option>\n        </select>\n        <p>Netflix India</p>\n      </section>\n    </div>\n  );\n};\n\nexport default LandingSection;\n","import React, { useState } from \"react\";\nimport \"./LoginScreen.css\";\nimport SignUpScreen from \"./SignUpScreen\";\nimport netflixlogo from \"../images/netflixlogo.png\";\nimport LandingSection from \"../components/LandingSection\";\n\nconst LoginScreen = () => {\n  const [signIn, setSignIn] = useState(false);\n  const updateSignIn = () =>{\n    setSignIn(true)\n  }\n  return (\n    <div className=\"loginScreen\">\n      <div className=\"loginScreen__background\">\n        <img\n          className=\"loginScreen__logo\"\n          src={netflixlogo}\n          alt=\"netflix logo\"\n        />\n        <button onClick={() => setSignIn(true)} className=\"loginScreen__button\">\n          Sign In\n        </button>\n        <div className=\"loginScreen__gradient\">\n          <div className=\"loginScreen__body\">\n            {signIn ? (\n              <SignUpScreen />\n            ) : (\n              <>\n                <h1>\n                  Unlimited movies, TV <br />\n                  shows and more.\n                </h1>\n                <h2>Watch anywhere. Cancel at any time.</h2>\n                <h3>\n                  Ready to watch? Enter your email to create or restart your\n                  membership.\n                </h3>\n                <div className=\"loginScreen__input\">\n                  <form action=\"\">\n                    <input type=\"email\" placeholder=\"Email Address\" />\n                    <button\n                      onClick={() => setSignIn(true)}\n                      className=\"loginScreen__getStarted\"\n                    >\n                      GET STARTED ▶\n                    </button>\n                  </form>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      {signIn ? null : <LandingSection updateSignIn={updateSignIn} />}\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n     user: null,\n  },\n  reducers: {\n    login: (state,action) =>{\n      state.user = action.payload\n    },\n    logout: (state) =>{\n      state.user = null;\n    }\n  },\n});\n\nexport const { login,logout  } = userSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectUser = state => state.user.user;\n\nexport default userSlice.reducer;\n","import React, { useEffect, useState } from 'react'\nimport \"./PlanScreen.css\"\n\nconst PlanScreen = () => {\n    const [plans,setPlans] =useState([\n        {\n            \"name\": \"Premium\",\n             \"quality\" : \"4k + HDR\"\n        },\n        {\n            \"name\": \"Basic\",\n            \"quality\":\"720p\"\n        },\n        {\n            \"name\": \"Standard\",\n            \"quality\": \"1080p\"\n        }\n    ])\n    return (\n        <div className='planScreen'>\n            {\n                plans.map(data =>(\n                    <div className=\"plan__box\">\n                        <p>{data?.name}</p>\n                         <small>{data?.quality}</small>\n                         <button>Subscribe</button>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default PlanScreen\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from '../features/userSlice'\nimport { auth } from '../config/firebase'\nimport Nav from '../components/Nav'\nimport PlanScreen from '../components/PlanScreen'\nimport \"./ProfileScreen.css\"\n\nconst ProfileScreen = () => {\n    const user = useSelector(selectUser)\n    console.log(user);\n    return (\n        <div className=\"profileScreen\">\n            <Nav />\n            <div className=\"profileScreen__body\">\n                <h1>Edit Profile</h1>\n                <div className=\"profileScreen__info\">\n                    <img src=\"https://image.flaticon.com/icons/png/512/147/147144.png\" alt=\"\"/>\n                    <div className=\"profileScreen__details\">\n                        <h2> {user?.emial} </h2>\n                        <div className=\"profileScreen__plans\">\n                            <h3>Plans (Current Plans premium)</h3>\n                            <PlanScreen />\n                            <button onClick={() => auth.signOut()} className=\"profileScreen__signOut\">Sign Out</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport HomeScreen from \"./views/HomeScreen\";\nimport LoginScreen from \"./views/LoginScreen\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { auth } from \"./config/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport ProfileScreen from \"./views/ProfileScreen\";\n\nconst App = () => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        dispatch(login({\n          uid: user.uid,\n          emial: user.email,\n        }))\n      } else {\n        dispatch(logout())\n      }\n    });\n    return unsubscribe;\n  }, [dispatch]);\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <LoginScreen />\n        ) : (\n          <Switch>\n            <Route exact path=\"/profile\" component={ProfileScreen} />\n            <Route exact path=\"/\" component={HomeScreen} />\n          </Switch>\n        )}\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore  , createStore, combineReducers, applyMiddleware} from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}